/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Lang {
            bindings = <&kp LG(SPACE)>;
            key-positions = <30 43>;
        };
    };

    macros {
        Switch_cyr: Switch_cyr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &tog 1>;
            label = "SWITCH_CYR";
        };
        Switch_eng: Switch_eng {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &tog 0>;
            label = "SWITCH_ENG";
        };
    };

    behaviors {
        Hyper_esc: Hyper_esc {
            compatible = "zmk,behavior-hold-tap";
            label = "HYPER_ESC";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
        cyrxtra_tab: cyrxtra_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "CYRXTRA_TAB";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&Hyper_esc LA(LC(LG(LEFT_SHIFT))) ESCAPE  &kp Q  &kp W  &kp F   &kp P      &kp B                                               &kp J    &kp L       &kp U        &kp Y    &kp APOS  &kp SEMI
&kp TAB                                   &kp A  &kp R  &kp S   &kp T      &kp G                                               &kp M    &kp N       &kp E        &kp I    &kp O     &kp MINUS
&Switch_cyr                               &kp Z  &kp X  &kp C   &kp D      &kp V     &kp LGUI  &kp RSHFT  &mo 3      &mo 4     &kp K    &kp H       &kp COMMA    &kp DOT  &kp FSLH  &kp EQUAL
                                                        &trans  &kp LCTRL  &kp LALT  &trans    &kp SPACE  &kp ENTER  &kp BSPC  &kp DEL  &kp K_COPY  &kp K_PASTE
            >;
        };

        cyr_base {
            bindings = <
&Hyper_esc LA(LC(LG(LEFT_SHIFT))) ESCAPE  &kp Q  &kp W  &kp E   &kp R      &kp T                                                                 &kp Y       &kp U       &kp I          &kp O      &kp LS(NUMBER_2)  &kp LS(NUMBER_4)
&cyrxtra_tab 2 TAB                        &kp A  &kp S  &kp D   &kp F      &kp G                                                                 &kp H       &kp J       &kp K          &kp L      &kp SEMICOLON     &kp MINUS
&Switch_eng                               &kp Z  &kp X  &kp C   &kp V      &kp B     &kp LEFT_COMMAND  &kp LEFT_SHIFT  &mo 3      &mo 4          &kp N       &kp M       &kp LS(SLASH)  &kp SLASH  &kp LS(PIPE)      &kp EQUAL
                                                        &trans  &kp LCTRL  &kp LALT  &trans            &kp SPACE       &kp ENTER  &kp BACKSPACE  &kp DELETE  &kp K_COPY  &kp K_PASTE
            >;
        };

        cyr_second {
            bindings = <
&trans       &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&Switch_eng  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                             &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        num {
            bindings = <
&kp ESCAPE   &kp ASTERISK  &kp N7  &kp N8  &kp N9            &kp SLASH                                                                  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp TILDE      &kp SEMICOLON
&kp TAB      &kp COMMA     &kp N4  &kp N5  &kp N6            &kp PLUS                                                                   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans          &trans           &kp GRAVE      &kp MINUS
&Switch_cyr  &kp DOT       &kp N1  &kp N2  &kp N3            &kp MINUS     &kp LEFT_COMMAND  &kp LEFT_SHIFT   &trans     &trans         &kp LESS_THAN         &kp GREATER_THAN       &kp COMMA       &kp PERIOD       &kp BACKSLASH  &kp EQUAL
                                   &trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &trans            &kp KP_NUMBER_0  &kp ENTER  &kp BACKSPACE  &kp DELETE            &trans                 &trans
            >;
        };

        navi {
            bindings = <
&Hyper_esc LA(LC(LG(LEFT_SHIFT))) ESCAPE  &trans  &trans  &trans  &trans            &trans                                                             &trans  &trans  &trans  &trans  &trans  &trans
&trans                                    &trans  &trans  &trans  &trans            &trans                                                             &trans  &trans  &trans  &trans  &trans  &trans
&Switch_cyr                               &trans  &trans  &trans  &trans            &trans        &kp LEFT_COMMAND  &kp LEFT_SHIFT  &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                          &trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &trans            &kp SPACE       &kp ENTER  &trans  &trans  &trans  &trans
            >;
        };

        symbol {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans  &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &bt BT_SEL 3  &bt BT_SEL 4  &trans                                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                            &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
