/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Lang {
            bindings = <&kp LG(SPACE)>;
            key-positions = <30 43>;
        };
    };

    macros {
        Switch_cyr: Switch_cyr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &tog 1>;
            label = "SWITCH_CYR";
        };
        Switch_eng: Switch_eng {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &tog 0>;
            label = "SWITCH_ENG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC      &kp Q  &kp W  &kp F   &kp P      &kp B                                               &kp J    &kp L   &kp U      &kp Y    &kp APOS  &kp SEMI
&kp TAB      &kp A  &kp R  &kp S   &kp T      &kp G                                               &kp M    &kp N   &kp E      &kp I    &kp O     &kp MINUS
&Switch_cyr  &kp Z  &kp X  &kp C   &kp D      &kp V     &kp LGUI  &kp RSHFT  &trans     &trans    &kp K    &kp H   &kp COMMA  &kp DOT  &kp FSLH  &kp EQUAL
                           &trans  &kp LCTRL  &kp LALT  &trans    &kp SPACE  &kp ENTER  &kp BSPC  &kp DEL  &trans  &trans
            >;
        };

        cyr_base {
            bindings = <
&kp ESC      &trans  &trans  &trans  &trans     &trans                                                                &trans      &trans  &trans         &trans     &kp LS(NUMBER_2)  &kp LS(NUMBER_4)
&kp TAB      &trans  &trans  &trans  &trans     &trans                                                                &trans      &trans  &trans         &trans     &trans            &kp MINUS
&Switch_eng  &trans  &trans  &trans  &trans     &trans    &kp LEFT_COMMAND  &kp LEFT_SHIFT  &trans     &trans         &trans      &trans  &kp LS(SLASH)  &kp SLASH  &kp LS(PIPE)      &kp EQUAL
                             &trans  &kp LCTRL  &kp LALT  &trans            &kp SPACE       &kp ENTER  &kp BACKSPACE  &kp DELETE  &trans  &trans
            >;
        };

        cyr_second {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        navi {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        symbol {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans  &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &bt BT_SEL 3  &bt BT_SEL 4  &trans                                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                            &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
