/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "../zmk-nodefree-config/helper.h"


#define BASE 0
#define CYRMAIN 1
#define CYRXTRA 2
#define NUM 3
#define NAVI 4
#define SYMBOL 5
#define FUNCTION 6
#define TYPOGRAPHY 7
#define BLUETOOTH 8

ZMK_BEHAVIOR(hrm, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
)

/ {

    macros {
        switch_eng {
            label = "Switch_English";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings 
                = <&to 0>,
                // <&macro_wait 10>,
                <&macro_oress &kp LA(LC(LG(LEFT_SHIFT)))>,
                <&macro_tap &kp N8>,
                <&macro_release &kp LA(LC(LG(LEFT_SHIFT)))>;
        };
        switch_cyr {
            label = "Switch_Cyrillic";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings 
                = <&to 1>,
                // <&macro_wait 10>,
                <&macro_oress &kp LA(LC(LG(LEFT_SHIFT)))>,
                <&macro_tap &kp N9>,
                <&macro_release &kp LA(LC(LG(LEFT_SHIFT)))>;
        };
    };


    combos {
        compatible = "zmk,combos";

        combo_switch_eng {
            key-positions = <44 45>;
            bindings = <&switch_eng>;
            layers = <1 2>;
            require-prior-idle-ms = <150>;
        };
        combo_switch_cyr {
            key-positions = <44 45>;
            bindings = <&switch_cyr>;
            layers = <0 3 4 5 6 7 8>;
            require-prior-idle-ms = <150>;
        };
        // Lang {
        //     bindings = <&Change_lang>;
        //     key-positions = <44 45>;
        //     require-prior-idle-ms = <150>;
        // };
        // Cyr {
        //     bindings = <&to 1>;
        //     layers = <0>;
        //     key-positions = <32 45>;
        //     require-prior-idle-ms = <150>;
        // };
        // Eng {
        //     bindings = <&to 0>;
        //     layers = <1 2>;
        //     key-positions = <32 45>;
        //     require-prior-idle-ms = <150>;
        // };
        // Close_wind {
        //     bindings = <&kp LG(W)>;
        //     key-positions = <4 5>;
        // };
        // Copy {
        //     bindings = <&kp LG(C)>;
        //     key-positions = <5 17>;
        // };
        // Paste {
        //     bindings = <&kp LG(V)>;
        //     key-positions = <17 29>;
        // };
        // Undo {
        //     bindings = <&kp LG(Z)>;
        //     key-positions = <6 18>;
        // };
        // Redo {
        //     bindings = <&kp LG(Y)>;
        //     key-positions = <18 34>;
        // };
        // New_wind {
        //     bindings = <&kp LG(N)>;
        //     key-positions = <6 7>;
        // };
        // Save {
        //     bindings = <&kp LG(S)>;
        //     key-positions = <28 29>;
        // };
        // New_tab {
        //     bindings = <&kp LG(T)>;
        //     key-positions = <34 35>;
        // };
        // Alfred {
        //     bindings = <&kp LA(SPACE)>;
        //     key-positions = <31 44>;
        // };
        // Caps {
        //     bindings = <&kp CAPS>;
        //     key-positions = <11 23>;
        // };
    };

        keymap {
        compatible = "zmk,keymap";

            _base {
            bindings = <
            // top line
            &kp ESCAPE &kp Q &kp W &kp F &kp P &kp B  /* middle */ &kp J &kp L &kp U &kp Y &kp APOS &kp COLON
            // second line
            &kp TAB &hrm LCTRL A &hrm LALT R &hrm LGUI S &hrm LSHIFT T &kp G /* middle */ &kp M &hrm RSHIFT N &hrm RGUI E &hrm RALT I &hrm RCTRL O &kp SEMI
            // bottom main line
            &kp TILDE &kp Z  &kp X &kp C &kp D &kp V /* thumb cluster -> */ &mt LA(LC(LG(LEFT_SHIFT))) SPACE &kp LSHFT /* middle */ &kp BSPC &kp DEL /* <- thumb cluster */ &kp K &kp H &kp COMMA &kp DOT &kp FSLH &kp QUESTION
            // bottom thumb cluster line
            &kp LEFT &kp RIGHT &lt 7 LG(V) &lt 5 LG(C) &lt 3 MINUS  /* middle */ &kp ENTER &lt 4 LPAR &lt 6 RPAR &kp DOWN &kp UP
            >;
        };

        _cyr_main {
            bindings = <

            // top line 
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // second line
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // bottom main line
            &trans &trans &trans &trans &trans &trans /* top thumb cluster line -> */ &trans &trans /* middle */ &trans &trans /* <- top thumb cluster line */ &trans &trans &trans &trans &trans &trans 
            // bottom thumb cluster line
            &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans           
            >;
        };

        _cyr_xtra {
            bindings = <
            // top line 
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // second line
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // bottom main line
            &trans &trans &trans &trans &trans &trans /* top thumb cluster line -> */ &trans &trans /* middle */ &trans &trans /* <- top thumb cluster line */ &trans &trans &trans &trans &trans &trans 
            // bottom thumb cluster line
            &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans  
            >;
        };

        _num {
            bindings = <
            // top line 
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // second line
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // bottom main line
            &trans &trans &trans &trans &trans &trans /* top thumb cluster line -> */ &trans &trans /* middle */ &trans &trans /* <- top thumb cluster line */ &trans &trans &trans &trans &trans &trans 
            // bottom thumb cluster line
            &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans  
            >;
        };

        _navi {
            bindings = <
            // top line 
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // second line
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // bottom main line
            &trans &trans &trans &trans &trans &trans /* top thumb cluster line -> */ &trans &trans /* middle */ &trans &trans /* <- top thumb cluster line */ &trans &trans &trans &trans &trans &trans 
            // bottom thumb cluster line
            &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans  
            >;
        };

        _symbol {
            bindings = <
            // top line 
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // second line
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // bottom main line
            &trans &trans &trans &trans &trans &trans /* top thumb cluster line -> */ &trans &trans /* middle */ &trans &trans /* <- top thumb cluster line */ &trans &trans &trans &trans &trans &trans 
            // bottom thumb cluster line
            &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans  
            >;
        };

        _function {
            bindings = <
            // top line 
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // second line
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // bottom main line
            &trans &trans &trans &trans &trans &trans /* top thumb cluster line -> */ &trans &trans /* middle */ &trans &trans /* <- top thumb cluster line */ &trans &trans &trans &trans &trans &trans 
            // bottom thumb cluster line
            &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans  
            >;
        };

        _typography {
            bindings = <
            // top line 
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // second line
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // bottom main line
            &trans &trans &trans &trans &trans &trans /* top thumb cluster line -> */ &trans &trans /* middle */ &trans &trans /* <- top thumb cluster line */ &trans &trans &trans &trans &trans &trans 
            // bottom thumb cluster line
            &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans  
            >;
        };
        _bluetooth {
            bindings = <
            // top line 
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // second line
            &trans &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans &trans
            // bottom main line
            &trans &trans &trans &trans &trans &trans /* top thumb cluster line -> */ &trans &trans /* middle */ &trans &trans /* <- top thumb cluster line */ &trans &trans &trans &trans &trans &trans 
            // bottom thumb cluster line
            &trans &trans &trans &trans &trans /* middle */ &trans &trans &trans &trans &trans  
            >;
        };

        };
    };